#Properties file for com.leonardocompany.leocheck.checkers
checker.name.CtorDtorChecker = Constructor/Destructor checker
problem.name.VirtualMethodCallProblem = Virtual method call in constructor/destructor
problem.messagePattern.VirtualMethodCallProblem = Calling a virtual method in constructor or destructor can cause crashes and unexpected behavior
problem.description.VirtualMethodCallProblem = This rule will flag constructor and destructor with virtual method calls
problem.name.ThrowInDestructorProblem = Throw exception in destructor
problem.messagePattern.ThrowInDestructorProblem = Throw exception in destructor
problem.description.ThrowInDestructorProblem = This rule will flag 'throw' expressions in destructors
problem.name.GlobalsInCtorProblem = Global variables in constructor
problem.messagePattern.GlobalsInCtorProblem = Global variable ''{0}'' used in constructor
problem.description.GlobalsInCtorProblem = This rule will flag global variables used in constructors

checker.name.MagicNumberChecker = Magic numbers checker
problem.name.MagicNumberProblem = Avoid magic numbers
problem.messagePattern.MagicNumberProblem = Avoid constant literals
problem.description.MagicNumberProblem = This rule will flag all constant literals numbers

checker.name.VariableShadowing = Variable shadowing checker
problem.description.VariableShadowing = This rule will flag local variables shadowing another symbol in upper scope
problem.messagePattern.VariableShadowing = Variable ''{0}'' is masking symbol declared in upper scope
problem.name.VariableShadowing = Local variable shadowing

checker.name.CopyrightChecker = Copyright in source code checker
problem.name.CopyrightProblem = Lack of copyright information
problem.messagePattern.CopyrightProblem = Copyright information missing
problem.description.CopyrightProblem = This rule will flag files without copyright information

checker.name.ShallowCopyChecker = Copy ctor and assignment operator checker
problem.name.ShallowCopyProblem = Miss copy constructor or assignment operator
problem.messagePattern.ShallowCopyProblem = Shallow copy can have negative run-time effects, explicit copy constructors/assignment operators for classes with references/pointers should be used
problem.description.ShallowCopyProblem = This rule will flag classes with pointer members without copy constructor or assignment operator

checker.name.VariablesChecker = Variable checker
problem.name.StaticVariableProblem = Static variable in header file
problem.messagePattern.StaticVariableProblem = Variables ''{0}'' is duplicated in each translation unit
problem.description.StaticVariableProblem = This rule will flag static variable declarations in header files
problem.name.MissedInitializationProblem = Variable without initialization
problem.messagePattern.MissedInitializationProblem = Variable ''{0}'' not initialized
problem.description.MissedInitializationProblem = This rule will flag variables without an initialization value
problem.name.MultipleDeclarationsProblem = Multiple variable declaration
problem.messagePattern.MultipleDeclarationsProblem = Variables should be declared one per line to improve readability
problem.description.MultipleDeclarationsProblem = This rule will flag multiple variable declaration

checker.name.FloatCompareChecker = Float compare checker
problem.name.FloatCompareProblem = Direct float comparison
problem.messagePattern.FloatCompareProblem = Float numbers should be compared using an epsilon
problem.description.FloatCompareProblem = This rule will flag direct float or double comparison

checker.name.AssignmentOperatorChecker = Assignment operator checker
problem.name.MissSelfCheckProblem = Miss self check in assignment operator
problem.messagePattern.MissSelfCheckProblem = Self assignment checks improves performances and avoid to unexpected behavior
problem.description.MissSelfCheckProblem = This rule will flag assignment operators without a self assignment check
problem.name.MissReferenceProblem = Miss reference return value in assignment operator
problem.messagePattern.MissReferenceProblem = Assignment operators should return by reference
problem.description.MissReferenceProblem = This rule will flag assignment operators not returning by reference

checker.name.GotoStatementChecker = Goto statement in source files checker
problem.name.GotoStatementProblem = Goto statement used
problem.messagePattern.GotoStatementProblem = Code that uses goto statements is harder to understand than alternative constructions
problem.description.GotoStatementProblem = This rule will flag goto statements in source files

checker.name.SwitchCaseChecker = Missing cases in switch statements checker
problem.name.MissCaseProblem = Miss cases in switch
problem.messagePattern.MissCaseProblem = Not all enumeration values are present in the switch statement
problem.description.MissCaseProblem = This rule will flag switch statements with missing case where enumerations have been used
problem.name.MissDefaultProblem = Miss default in switch
problem.messagePattern.MissDefaultProblem = When default case miss the switch is not complete for all values
problem.description.MissDefaultProblem = This rule will flag switch statements without a default case

checker.name.ReturnChecker = Return checker
problem.description.LocalVarReturn = Returning the address of a local variable
problem.messagePattern.LocalVarReturn = Returning the address of local variable ''{0}''
problem.name.LocalVarReturn = Returning the address of a local variable
problem.description.RetPrivateField = Returning no const address or reference to no-public class fields
problem.messagePattern.RetPrivateField = Returning the no-public field ''{0}'' without const
problem.name.RetPrivateField = Encapsulation violation
problem.description.NoRetThisOpAssign = The assignment operator must always return 'this'
problem.messagePattern.NoRetThisOpAssign = Assignment operator does not return 'this' 
problem.name.NoRetThisOpAssign = Operator assign no return this

checker.name.ClassMembersConst = Class member functions should be constant and static if possible
problem.name.MemberCannotBeUsedInStatic = Class members cannot be used in static methods
problem.messagePattern.MemberCannotBeUsedInStatic = Class member ''{0}'' cannot be used in static method ''{1}''
problem.description.MemberCannotBeUsedInStatic = Class members cannot be used in static methods
problem.name.MethodShouldBeStatic = Method should be static
problem.messagePattern.MethodShouldBeStatic = Method ''{0}'' should be static
problem.description.MethodShouldBeStatic = Method doesn't use any class member so it should be declared as static
problem.name.MemberCannotBeWritten = Class members cannot be written in constant methods
problem.messagePattern.MemberCannotBeWritten = Class member ''{0}'' cannot be written in constant method ''{1}''
problem.description.MemberCannotBeWritten = Class members cannot be written in constant methods
problem.name.MethodShouldBeConst = Method should be constant
problem.messagePattern.MethodShouldBeConst = Method ''{0}'' should be constant
problem.description.MethodShouldBeConst = Method doesn't write any class member or call nonconstant function so it should be declared as constant

checker.name.AllocationChecker = Allocation checker
problem.description.DeleteThisProblem = This rule will flag expressions with 'delete this' to delete an object
problem.messagePattern.DeleteThisProblem = Object deletion using 'this' pointer
problem.name.DeleteThisProblem = Deletion using 'this' pointer
problem.description.PointerResetProblem = This rule will flag expressions where 'delete' is used but pointer is not reset to zero
problem.messagePattern.PointerResetProblem = Pointer ''{0}'' is not reset to zero after deletion
problem.name.PointerResetProblem = Pointer reset after deletion
problem.description.DynamicArrayProblem = Use 'Array' or 'Vector' classes instead of allocating an array directly
problem.messagePattern.DynamicArrayProblem = Dynamic array allocation
problem.name.DynamicArrayProblem = Dynamic allocation of array
problem.description.DeleteVoidProblem = Deleting memory using a void pointer is undefined behavior
problem.messagePattern.DeleteVoidProblem = Delete using void pointers ''{0}''
problem.name.DeleteVoidProblem = Delete using void pointers

checker.name.NamingConventionClassesChecker = Naming convention checker
problem.description.ClassNameProblem = This rule will flag classes with a name not compliant with a defined pattern
problem.messagePattern.ClassNameProblem = Bad class name ''{0}'' (pattern /{1}/)
problem.name.ClassNameProblem = Naming convention for classes
problem.description.LabelPositionProblem = This rule will flag visibility labels defined in a sequence different from private, protected, public
problem.messagePattern.LabelPositionProblem = Label defined out of sequence
problem.name.LabelPositionProblem = Order convention for visibility labels
problem.description.FieldsVisibilityProblem = This rule will flag classes with fields with a visibility different from private
problem.messagePattern.FieldsVisibilityProblem = Class ''{0}'' has no-private fields
problem.name.FieldsVisibilityProblem = Class fields visibility

checker.name.TryCatchStatementChecker = Try catch statement checker
problem.description.CatchAllProblem = This rule will flag 'catch all' handlers if they are used without any other specialized catch handler
problem.messagePattern.CatchAllProblem = Avoid using 'catch all'
problem.name.CatchAllProblem = Avoid using 'catch all'
problem.description.CatchAllOrderProblem = This rule will flag 'catch all' handlers defined before another catch handler in a try-catch block
problem.messagePattern.CatchAllOrderProblem = 'catch all' must be the latest handler in a try-catch block
problem.name.CatchAllOrderProblem = 'catch all' position
problem.description.CatchEmptyProblem = This rule will flag empty 'catch' handlers
problem.messagePattern.CatchEmptyProblem = Empty 'catch' is not allowed
problem.name.CatchEmptyProblem = Avoid empty 'catch'
problem.description.EmptyThrowProblem = This rule will flag empty 'throw' statement used outside a catch handler
problem.messagePattern.EmptyThrowProblem = Empty 'throw' is not allowed outside any catch handler
problem.name.EmptyThrowProblem = Empty 'throw'

checker.name.SizeofChecker = Sizeof checker
problem.description.SizeofArrayProblem = This rule will flag sizeof operator applied to arrays used as function parameters
problem.messagePattern.SizeofArrayProblem = Sizeof applied to function parameter ''{0}'' 
problem.name.SizeofArrayProblem = Sizeof applied to arrays
problem.description.SizeofNestedProblem = This rule will flag nested sizeof operators
problem.messagePattern.SizeofNestedProblem = Nested sizeof operators 
problem.name.SizeofNestedProblem = Nested sizeof operators
problem.description.SizeofVoidProblem = This rule will flag sizeof operator applied to void types
problem.messagePattern.SizeofVoidProblem = Sizeof applied to void type 
problem.name.SizeofVoidProblem = Sizeof applied to void type

checker.name.TrigraphsChecker = Trigraphs checker
problem.description.TrigraphsProblem = This rule will flag the use of trigraphs (??=, ??/, ??^, ??(, ??), ??!, ??<, ??>, ??-)
problem.messagePattern.TrigraphsProblem = Trigraphs ''{0}'' used
problem.name.TrigraphsProblem = Avoid trigraphs

checker.name.LambdaExpressionChecker = Lambda expression checker
problem.description.LambdaCaptureProblem = This rule will flag the use default capture for a lambda expression
problem.messagePattern.LambdaCaptureProblem = Default capture used for lambda expression
problem.name.LambdaCaptureProblem = Avoid lambda default capture

checker.name.NamespaceChecker = Namespace checker
problem.description.StdNamespaceProblem = It is undefined behavior to add declarations or definitions to namespace std or to any namespace nested within std
problem.messagePattern.StdNamespaceProblem = Do not add anything to standard namespace
problem.name.StdNamespaceProblem = Hook to std namespace

checker.name.ForLoopChecker = For loop checker
problem.description.FloatCounterProblem = This rule will flag for loops with float counters
problem.messagePattern.FloatCounterProblem = For loop uses a float counter 
problem.name.FloatCounterProblem = Float counter in for loop

checker.name.AutoPtrChecker = Auto pointer checker
problem.description.AutoPtrProblem = This rule will flag the use of old auto_ptr class
problem.messagePattern.AutoPtrProblem = Auto pointer is deprecated, replace with unique_ptr 
problem.name.AutoPtrProblem = Usage of auto pointer

checker.name.BlacklistChecker = Function or method in blacklist checker
problem.name.BlacklistProblem = Function or method in blacklist
problem.messagePattern.BlacklistProblem = Some method or functions can't be used
problem.description.BlacklistProblem = This rule will flag the use of functions or methods in blacklist

checker.name.MemCompareChecker = Mem compare checker
problem.name.CompareCompositeTypesProblem = Memory compare with composite types
problem.messagePattern.CompareCompositeTypesProblem = Comparing composite type with possible padding
problem.description.CompareCompositeTypesProblem = This rule will flag the use of memcmp function over structures or classes. Due to padding, compare is not reliable.

checker.name.StringChecker = String checker
problem.name.CstrProblem = Wrong use of c_str
problem.messagePattern.CstrProblem = Use of c_str on temporary instance
problem.description.CstrProblem = This rule will flag calls to c_str string method on temporaries

checker.name.BraceChecker = Miss brace checker
problem.name.MissBraceProblem = Miss brace in control statements
problem.messagePattern.MissBraceProblem = Miss brace
problem.description.MissBraceProblem = This rule will flag 'if/for/while/do-while' statements without an opening brace
